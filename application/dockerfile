# Use the official Python 3.11 slim image as the base image
FROM python:3.11-slim AS backend-builder

# Optimize apt-get usage and install Node.js and system packages
RUN apt-get update && \
    apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs ffmpeg git cmake gfortran libopenblas-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install pip dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir --upgrade cython Cython
RUN pip install --no-cache-dir git+https://github.com/CPJKU/madmom

# Set the working directory for the backend
WORKDIR /app/backend

# Copy backend requirements and install dependencies
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the backend code
COPY backend/ .

# Frontend build stage
FROM node:22-slim AS frontend-build

# Set the working directory for the frontend
WORKDIR /app/frontend

# Copy frontend package files and install dependencies
COPY frontend/package*.json ./
RUN npm install

# Copy the rest of the frontend code
COPY frontend/ .
COPY frontend/.env ./.env

# Build argument to force rebuild
ARG BUILD_ARG

# Build the frontend application
RUN echo "Build argument: $BUILD_ARG" && npm run build

# Final stage for the backend
FROM python:3.11-slim AS backend-final

# Install ffmpeg for audio processing
RUN apt-get update && \
    apt-get install -y ffmpeg && \
    rm -rf /var/lib/apt/lists/*

# Copy installed Python packages from backend-builder
COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=backend-builder /usr/local/bin /usr/local/bin

# Copy backend from the backend-builder stage
COPY --from=backend-builder /app/backend /app/backend

# Set the working directory
WORKDIR /app/backend

# Command to run the backend
CMD ["python", "app.py"]


# Final stage for the frontend (Nginx)
FROM nginx:alpine AS frontend-final

# Copy the Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built frontend from the frontend-build stage
COPY --from=frontend-build /app/frontend/out /usr/share/nginx/html

# Expose port 3000 for Nginx
EXPOSE 3000

# Command to run Nginx
CMD ["nginx", "-g", "daemon off;"]
