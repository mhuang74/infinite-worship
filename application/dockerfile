# 1. Builder stage for backend dependencies
FROM python:3.11-slim AS builder

# Install build-time system dependencies for Alpine
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    gfortran \
    git \
    libopenblas-dev \
    cython3 \
    && rm -rf /var/lib/apt/lists/*

# Create a virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python build dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir cython

# Install madmom from source
RUN pip install --no-cache-dir git+https://github.com/CPJKU/madmom

# Install application-specific python dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# 2. Frontend build stage
FROM node:22-slim AS frontend-build

WORKDIR /app/frontend

# Copy package files and install dependencies
COPY frontend/package*.json ./
RUN npm install

# Copy the rest of the frontend code
COPY frontend/ ./

# Build the application
RUN npm run build


# 3. Final production stage
FROM python:3.11-slim AS final

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends ffmpeg nodejs npm && rm -rf /var/lib/apt/lists/*

# Copy the virtual environment from the builder stage
COPY --from=builder /opt/venv /opt/venv

# Prepare frontend runtime dependencies
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --omit=dev

# Copy the built frontend from the frontend-build stage
COPY --from=frontend-build /app/frontend/.next /app/frontend/.next
COPY frontend/public /app/frontend/public

# Copy the backend application code
COPY backend/ /app/backend

# Set the application's working directory
WORKDIR /app

# Set the PATH to include the virtual environment
ENV PATH="/opt/venv/bin:$PATH"

# Expose ports for frontend and backend
EXPOSE 3000 5001

# Start both the backend and frontend
CMD ["sh", "-c", "cd /app/backend && python app.py & (cd /app/frontend && npm start)"]